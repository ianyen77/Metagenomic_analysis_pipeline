dianomd_annotate_orf<-read.table("C://Users/USER/Desktop/SRR6986807ARC.sam.map.txt",header = T,sep = "\t")
View(dianomd_annotate_orf)
dianomd_annotate_orf<-read.table("C://Users/USER/Desktop/SRR6986807ARC.sam.map.txt",header = T,sep = "\t")
View(dianomd_annotate_orf)
dianomd_annotate_orf<-read.xlsx("C:/Users/USER/Desktop/SRR6986807ARC_classfication.xlsx",rowNames=F,colNames=T,sheet=1)
View(dianomd_annotate_orf)
bowtie2_bbmap_mapped_coverage<-read.table("C://Users/USER/Desktop/SRR6986807ARC.sam.map.txt",header=T,sep="\t")
View(bowtie2_bbmap_mapped_coverage)
View(dianomd_annotate_orf)
colnames(dianomd_annotate_orf)[colnames(dianomd_annotate_orf) == 'qseqid'] <- 'ID'
coverage_dianomd_list<-merge(dianomd_annotate_orf,bowtie2_bbmap_mapped_coverage,by="ID",all = T)
View(coverage_dianomd_list)
dianomd_annotate_orf<-read.xlsx("C:/Users/USER/Desktop/SRR6986807ARC_classfication.xlsx",rowNames=F,colNames=T,sheet=1)
bowtie2_bbmap_mapped_coverage<-read.table("C://Users/USER/Desktop/SRR6986807ARC.sam.map.txt",header=T,sep="\t")
View(dianomd_annotate_orf)
colnames(bowtie2_bbmap_mapped_coverage)[colnames(bowtie2_bbmap_mapped_coverage) == 'ID'] <- 'contig'
View(bowtie2_bbmap_mapped_coverage)
View(dianomd_annotate_orf)
coverage_dianomd_list<-merge(dianomd_annotate_orf,bowtie2_bbmap_mapped_coverage,by="contig",all = T)
View(coverage_dianomd_list)
View(bowtie2_bbmap_mapped_coverage)
View(dianomd_annotate_orf)
View(coverage_dianomd_list)
View(dianomd_annotate_orf)
View(coverage_dianomd_list)
View(coverage_dianomd_list)
View(dianomd_annotate_orf)
View(coverage_dianomd_list)
coverage_dianomd_list%>%
filter(!is.na(gene))
coverage_dianomd_list<-coverage_dianomd_list%>%
filter(!is.na(gene))
coverage_dianomd_type_stastis<-coverage_dianomd_list%>%
group_by(type)%>%
summarise(type_sum=sum(Avg_fold,na.rm = T))
View(coverage_dianomd_type_stastis)
coverage_dianomd_subtype_stastis<-coverage_dianomd_reannotae%>%
group_by(type,subtype)%>%
summarise(subtype_sum=sum(Avg_fold,na.rm = T))
coverage_dianomd_subtype_stastis<-coverage_dianomd_list%>%
group_by(type,subtype)%>%
summarise(subtype_sum=sum(Avg_fold,na.rm = T))
View(coverage_dianomd_subtype_stastis)
View(coverage_dianomd_type_stastis)
View(coverage_dianomd_list)
View(coverage_dianomd_list)
View(coverage_dianomd_list)
coverage_dianomd_list%>%
mutate(coverage=(AVG_fold*150/5.6))
View(coverage_dianomd_list)
coverage_dianomd_list%>%
mutate(coverage=(Avg_fold*150/5.6))
list<-coverage_dianomd_list%>%
mutate(coverage=(Avg_fold*150/5.6))
View(list)
contig_length<-read.xlsx("C:/Users/USER/Desktop/contig_len.xlsx",rowNames = F,colNames = T,sheet=1)
View(list)
View(contig_length)
View(coverage_dianomd_list)
coverage_dianomd_list<-merge(coverage_dianomd_list,contig_length,all.x=T)
View(coverage_dianomd_list)
list<-coverage_dianomd_list%>%
mutate(coverage=(Avg_fold*150/(len*5.6)))
View(coverage_dianomd_list)
View(list)
View(list)
View(list)
View(list)
View(list)
list<-coverage_dianomd_list%>%
mutate(contig_coverage=(Avg_fold*150/(len*5.6)))%>%
select(contig,qseqid,type,subtype,contig_taxon,percent,contig_coverage)
View(list)
#利用ARGOAP 用手動腳本計算16s normalized豐度的腳本
#1.需要先將DB(usearch)換成想要比對的DB(usearch.udb)(stageone)
#2.運行STAGEONE
#3.makeblastdb
#4.blastx
library("openxlsx")
library("tidyverse")
#這邊是針對evalue, idendity,aa length 做一些篩選,根據你要的條件調整過
evaluematch<-1e-7
identitymatch<-80
aa_length<-25
#接下來我們將blastx過的output 讀進來
SARG_blastx_hit<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=1,colNames = F)
View(SARG_blastx_hit)
colnames(SARG_blastx_hit)<-c("qseqid", "gene", "pident", "length", "mismatch", "gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
#根據先前設定的篩選掉不符合的blast
SARG_blastx_filter<-SARG_blastx_hit%>%
filter(evalue<=evaluematch)%>%
filter(pident>=identitymatch)%>%
filter(length>=aa_length)
#接著我們將ARGDATAbase 的AA長度讀進來，可以用perl腳本取得
SARGgenelength<-read.xlsx(xlsxFile = "C:/Users/TUNG'S LAB/Desktop/test1.xlsx",sheet=3,colNames = T)
#接著我們將ARGDATAbase 的AA長度讀進來，可以用perl腳本取得
SARGgenelength<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=3,colNames = T)
View(SARGgenelength)
#接著我們將ARGDATAbase 的AA長度讀進來，可以用perl腳本取得
SARGgenelength<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=3,colNames = F)
colnames(SARGgenelength)<-c("qseqid","aalength")
SARG_blastx_filter<-merge(SARG_blastx_filter,SARGgenelength,all.x=T)
#這個數字是來自metadata online.txt的16s數量
metadata16s<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=2,colNames = F)
View(metadata16s)
#這個數字是來自metadata online.txt的16s數量
metadata16s<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=2,colNames = T)
View(metadata16s)
View(SARG_blastx_filter)
View(SARG_blastx_filter)
View(metadata16s)
?separate
separate(SARG_blastx_filter,qseqid,into=c("Name","seqnum"),sep = "_",remove = F)
SARG_blastx_filter<-separate(SARG_blastx_filter,qseqid,into=c("Name","seqnum"),sep = "_",remove = F)
View(SARG_blastx_filter)
SARG_blastx_filter$seqnum<-NULL
SARG_annoate_blastx<-merge(SARG_blastx_filter,metadata16s,by="Name",all.x = T)
View(SARG_annoate_blastx)
View(SARGgenelength)
colnames(SARGgenelength)<-c("qseqid","aalength")
SARG_blastx_filter<-merge(SARG_blastx_filter,SARGgenelength,all.x=T)
View(SARG_blastx_filter)
#接著我們將ARGDATAbase 的AA長度讀進來，可以用perl腳本取得
SARGgenelength<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=3,colNames = F)
colnames(SARGgenelength)<-c("qseqid","aalength")
SARG_blastx_filter<-merge(SARG_blastx_filter,SARGgenelength,all.x=T)
View(SARG_blastx_filter)
#接著我們將ARGDATAbase 的AA長度讀進來，可以用perl腳本取得
SARGgenelength<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=3,colNames = F)
colnames(SARGgenelength)<-c("qseqid","aalength")
#利用ARGOAP 用手動腳本計算16s normalized豐度的腳本
#1.需要先將DB(usearch)換成想要比對的DB(usearch.udb)(stageone)
#2.運行STAGEONE
#3.makeblastdb
#4.blastx
library("openxlsx")
library("tidyverse")
#這邊是針對evalue, idendity,aa length 做一些篩選,根據你要的條件調整過
evaluematch<-1e-7
identitymatch<-80
aa_length<-25
#接下來我們將blastx過的output 讀進來
SARG_blastx_hit<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=1,colNames = F)
colnames(SARG_blastx_hit)<-c("qseqid", "gene", "pident", "length", "mismatch", "gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
#根據先前設定的篩選掉不符合的blast
SARG_blastx_filter<-SARG_blastx_hit%>%
filter(evalue<=evaluematch)%>%
filter(pident>=identitymatch)%>%
filter(length>=aa_length)
#接著我們將ARGDATAbase 的AA長度讀進來，可以用perl腳本取得
SARGgenelength<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=3,colNames = F)
colnames(SARGgenelength)<-c("qseqid","aalength")
SARG_blastx_filter<-merge(SARG_blastx_filter,SARGgenelength,all.x=T,by="qseqis")
SARG_blastx_filter<-merge(SARG_blastx_filter,SARGgenelength,all.x=T,by="qseqid")
View(SARG_blastx_filter)
View(SARG_blastx_hit)
#接著我們將ARGDATAbase 的AA長度讀進來，可以用perl腳本取得
SARGgenelength<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=3,colNames = F)
colnames(SARGgenelength)<-c("qseqid","aalength")
SARG_blastx_filter<-merge(SARG_blastx_filter,SARGgenelength,all.x=T,by="qseqid")
View(SARG_blastx_filter)
#接著我們將ARGDATAbase 的AA長度讀進來，可以用perl腳本取得
SARGgenelength<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=3,colNames = F)
colnames(SARGgenelength)<-c("gene","aalength")
SARG_blastx_filter<-merge(SARG_blastx_filter,SARGgenelength,all.x=T,by="qseqid")
SARG_blastx_filter<-merge(SARG_blastx_filter,SARGgenelength,all.x=T,by="gene")
View(SARG_blastx_filter)
#接下來我們將blastx過的output 讀進來
SARG_blastx_hit<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=1,colNames = F)
colnames(SARG_blastx_hit)<-c("qseqid", "gene", "pident", "length", "mismatch", "gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
#根據先前設定的篩選掉不符合的blast
SARG_blastx_filter<-SARG_blastx_hit%>%
filter(evalue<=evaluematch)%>%
filter(pident>=identitymatch)%>%
filter(length>=aa_length)
#接著我們將ARGDATAbase 的AA長度讀進來，可以用perl腳本取得
SARGgenelength<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=3,colNames = F)
colnames(SARGgenelength)<-c("gene","aalength")
SARG_blastx_filter<-merge(SARG_blastx_filter,SARGgenelength,all.x=T,by="gene")
View(SARG_blastx_filter)
#這個數字是來自metadata online.txt的16s數量
metadata16s<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=2,colNames = T)
SARG_blastx_filter<-separate(SARG_blastx_filter,qseqid,into=c("Name","seqnum"),sep = "_",remove = F)
SARG_blastx_filter$seqnum<-NULL
SARG_annoate_blastx<-merge(SARG_blastx_filter,metadata16s,by="Name",all.x = T)
View(metadata16s)
View(SARG_annoate_blastx)
#這個數字是來自metadata online.txt的16s數量
gene_name<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=4,colNames = F)
colnames(gene_name)<-c("gene","gene_name")
SARG_annoate_blastx<-merge(SARG_annoate_blastx,gene_name,by="gene",all.x=T)
View(SARG_annoate_blastx)
View(SARG_annoate_blastx)
View(SARG_blastx_filter)
View(SARG_blastx_filter)
View(SARG_blastx_filter)
View(metadata16s)
View(SARG_annoate_blastx)
View(SARG_annoate_blastx)
#這個計算是將blast到的長度/reference AA的長度*16S數量，再加總
SARG_annoate_blastx<-SARG_annoate_blastx%>%
mutate("blastlength/referencelength"=length/(aalength*`#of16Sreads`))
View(SARG_annoate_blastx)
View(SARG_annoate_blastx)
subtype_16snormalize<-SARG_annoate_blastx%>%
group_by(Name)%>%
summarise(subtype_sum=sum(`blastlength/referencelength`,na.rm = T))
View(subtype_16snormalize)
subtype_16snormalize<-SARG_annoate_blastx%>%
group_by(Name,gene)%>%
summarise(subtype_sum=sum(`blastlength/referencelength`,na.rm = T))
subtype_16snormalize<-SARG_annoate_blastx%>%
group_by(gene)%>%
summarise(subtype_sum=sum(`blastlength/referencelength`,na.rm = T))
View(subtype_16snormalize)
subtype_16snormalize<-SARG_annoate_blastx%>%
group_by(Name,gene)%>%
summarise(subtype_sum=sum(`blastlength/referencelength`,na.rm = T))
View(SARG_annoate_blastx)
subtype_16snormalize<-SARG_annoate_blastx%>%
group_by(gene)%>%
summarise(subtype_sum=sum(`blastlength/referencelength`,na.rm = T))
View(subtype_16snormalize)
subtype_16snormalize<-SARG_annoate_blastx%>%
group_by(Name,gene)%>%
summarise(subtype_sum=sum(`blastlength/referencelength`,na.rm = T))
subtype_16snormalize<-SARG_annoate_blastx%>%
group_by(Name,gene)%>%
summarise(subtype_sum=sum(`blastlength/referencelength`,na.rm = T))
View(subtype_16snormalize)
subtype_16snormalize<-merge(subtype_16snormalize,gene_name,by="gene",all.x = T)
View(subtype_16snormalize)
write.xlsx(subtype_16snormalize,file ="ff.xlsx")
write.xlsx(subtype_16snormalize,file ="C:/Users/USER/Desktop/ff.xlsx")
subtype_16snormalize<-SARG_annoate_blastx%>%
group_by(Name)%>%
summarise(subtype_sum=sum(`blastlength/referencelength`,na.rm = T))
View(subtype_16snormalize)
subtype_16snormalize<-SARG_annoate_blastx%>%
group_by(Name)%>%
summarise(subtype_sum=sum(`blastlength/referencelength`,na.rm = T))
write.xlsx(subtype_16snormalize,file ="C:/Users/USER/Desktop/ff.xlsx")
#利用ARGOAP 用手動腳本計算16s normalized豐度的腳本
#1.需要先將DB(usearch)換成想要比對的DB(usearch.udb)(stageone)
#2.運行STAGEONE
#3.makeblastdb
#4.blastx
library("openxlsx")
library("tidyverse")
#這邊是針對evalue, idendity,aa length 做一些篩選,根據你要的條件調整過
evaluematch<-1e-7
identitymatch<-80
aa_length<-25
#接下來我們將blastx過的output 讀進來
SARG_blastx_hit<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/mge blastout.xlsx",sheet=1,colNames = F)
colnames(SARG_blastx_hit)<-c("qseqid", "gene", "pident", "length", "mismatch", "gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
#根據先前設定的篩選掉不符合的blast
SARG_blastx_filter<-SARG_blastx_hit%>%
filter(evalue<=evaluematch)%>%
filter(pident>=identitymatch)%>%
filter(length>=aa_length)
#接著我們將ARGDATAbase 的AA長度讀進來，可以用perl腳本取得
SARGgenelength<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/mge blastout.xlsx",sheet=2,colNames = F)
colnames(SARGgenelength)<-c("gene","aalength")
SARG_blastx_filter<-merge(SARG_blastx_filter,SARGgenelength,all.x=T,by="gene")
#這個數字是來自metadata online.txt的16s數量
metadata16s<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/clresistance/db/clresistblast.xlsx",sheet=2,colNames = T)
View(metadata16s)
SARG_blastx_filter<-separate(SARG_blastx_filter,qseqid,into=c("Name","seqnum"),sep = "_",remove = F)
SARG_blastx_filter$seqnum<-NULL
SARG_annoate_blastx<-merge(SARG_blastx_filter,metadata16s,by="Name",all.x = T)
#這個數字是來自metadata online.txt的16s數量
gene_name<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=4,colNames = F)
#這個計算是將blast到的長度/reference AA的長度*16S數量，再加總
SARG_annoate_blastx<-SARG_annoate_blastx%>%
mutate("blastlength/referencelength"=length/(aalength*`#of16Sreads`))
View(SARG_annoate_blastx)
subtype_16snormalize<-SARG_annoate_blastx%>%
group_by(Name)%>%
summarise(subtype_sum=sum(`blastlength/referencelength`,na.rm = T))
View(subtype_16snormalize)
View(SARG_annoate_blastx)
#分析MGE跟ARG的相關性
arg<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/ARG/argoap_out.xlsx",sheet=2,rowNames=T,colNames =T)
#分析MGE跟ARG的相關性
arg<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/ARG/argoap_out.xlsx",sheet=2,rowNames=T,colNames =T)
arg<-as.data.frame(t(data))
#分析MGE跟ARG的相關性
arg<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/ARG/argoap_out.xlsx",sheet=2,rowNames=T,colNames =T)
arg<-as.data.frame(t(data))
#分析MGE跟ARG的相關性
arg<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/ARG/argoap_out.xlsx",sheet=2,rowNames=T,colNames =T)
arg<-as.data.frame(t(arg))
arg$sum<-apply(arg,1,sum)
View(arg)
arg$location<-c("Raw","Raw","Raw","Finished","Finished","Finished","Upstream","Upstream","Upstream","Midstream","Midstream","Midstream","Downstream","Downstream","Downstream")
arg$location<-factor(arg$location,levels = c("Raw","Finished","Upstream","Midstream","Downstream"))
cbind(subtype_16snormalize,arg$sum,arg$location)
MGE_ARG<-cbind(subtype_16snormalize,arg$sum,arg$location)
View(arg)
View(MGE_ARG)
arg_sum<-arg$sum
locatoin<_arg$location
locatoin<-arg$location
MGE_ARG<-cbind(subtype_16snormalize,arg_sum,location)
View(MGE_ARG)
colnames(MGE_ARG)[4]<-"location"
colnames(MGE_ARG)[3]<-"arg_sum"
varaible_group_mean<-dsubtype_16snormalize%>%
group_by(location)%>%
summarise(type_mean=mean(sum),type_sd=sd(sum))
varaible_group_mean<-subtype_16snormalize%>%
group_by(location)%>%
summarise(type_mean=mean(sum),type_sd=sd(sum))
#先畫一張MGE豐度圖
varaible_group_mean<-MGE_ARG%>%
group_by(location)%>%
summarise(type_mean=mean(subtype_sum),type_sd=sd(subtype_sum))
varaible_group_mean$location<-factor(varaible_group_mean$location,levels=c("Raw","Finished","Upstream","Midstream","Downstream"))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3")+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.2,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+
geom_line(data=tibble(x=c(2,5),y=c(0.215,0.215)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=3.5,y=0.22),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,5),y=c(0.2,0.2)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=4,y=0.205),aes(x=x,y=y,label="*"),size=5,inherit.aes = F)+
geom_line(data=tibble(x=c(4,5),y=c(0.185,0.185)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=4.5,y=0.19),aes(x=x,y=y,label="**"),size=5,inherit.aes = F)
library("car")
library("FSA")
library("mdthemes")
View(subtype_16snormalize)
View(varaible_group_mean)
View(MGE_ARG)
#分析顯著差異
varaible_and_group<-subtype_sum~location#想測試的變數跟組別
{#檢查數據是否是常態分布的,利用shapiro.test來檢驗數據是不是常態的，如果p>0.05那麼數據就是常態的
Data.levels<-split(MGE_ARG, MGE_ARG$location)
for(i in seq(length(Data.levels))) {
group.n<-length(Data.levels[[i]]$location)
group.name <-Data.levels[[i]]$location[1]
cat(paste("Group: ", group.name, sep=''), sep="", append=TRUE)
if (group.n < 50) {
shapiro.result<- shapiro.test(Data.levels[[i]]$subtype_sum)
cat(", Shapiro-Wilk normality test W = ", shapiro.result$statistic, " p-value = ", shapiro.result$p.value, "\n" , sep="")
} else {
ks.result<-ks.test(Data.levels[[i]]$subtype_sum, pnorm, mean(Data.levels[[i]]$subtype_sum), sd(Data.levels[[i]]$subtype_sum))
cat(", Kolmogorov-Smirnov normality test D = ", ks.result$statistic, " p-value = ", ks.result$p.value, "\n" , sep="", append=TRUE)
}
}
#檢查數據變異數的同質性，，如果levenes test 的結果p>0.05，那我們可以認為以這幾個組別間的變異數沒有明顯差異，他們是同質的P
homo<-leveneTest(varaible_and_group,data = MGE_ARG)
if (homo$`Pr(>F)`[1]>0.05){
print("data is homo")
}else{print ("data is nonhomo")}
#如果不同質可以用ftest來看是誰不同質
#res.ftest <- var.test(Data.levels[[1]]$bacitracin,Data.levels[[4]]$bacitracin,data = data)
#res.ftest
}
#我們必須手動去看是否是常態及同質的，如果兩者皆符合，那我們可以使用t-test
pairwise.t.test(data$sum,data$location,p.adjust.method = "BH")
#我們必須手動去看是否是常態及同質的，如果兩者皆符合，那我們可以使用t-test
pairwise.t.test(MGE_ARG$subtype_sum,MGE_ARG$location,p.adjust.method = "BH")
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3")+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.2,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+
geom_line(data=tibble(x=c(1,3),y=c(0.42,0.42)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2,y=0.425),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3")+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.2,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+
geom_line(data=tibble(x=c(1,3),y=c(0.35,0.35)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2,y=0.355),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3")+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.2,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+
geom_line(data=tibble(x=c(1,3),y=c(0.35,0.35)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2,y=0.355),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,5),y=c(0.2,0.2)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=4,y=0.205),aes(x=x,y=y,label="*"),size=5,inherit.aes = F)+
geom_line(data=tibble(x=c(2,3),y=c(0.33,0.33)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2.5,y=0.335),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3")+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.2,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+
geom_line(data=tibble(x=c(1,3),y=c(0.35,0.35)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2,y=0.355),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,5),y=c(0.35,35)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=4,y=0.355),aes(x=x,y=y,label="*"),size=5,inherit.aes = F)+
geom_line(data=tibble(x=c(2,3),y=c(0.33,0.33)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2.5,y=0.335),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3")+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.2,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+
geom_line(data=tibble(x=c(1,3),y=c(0.35,0.35)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2,y=0.355),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,5),y=c(0.35,0.355)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=4,y=0.355),aes(x=x,y=y,label="*"),size=5,inherit.aes = F)+
geom_line(data=tibble(x=c(2,3),y=c(0.33,0.33)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2.5,y=0.335),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3")+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.2,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+
geom_line(data=tibble(x=c(1,3),y=c(0.35,0.35)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2,y=0.355),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,5),y=c(0.35,0.35)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=4,y=0.355),aes(x=x,y=y,label="*"),size=5,inherit.aes = F)+
geom_line(data=tibble(x=c(2,3),y=c(0.33,0.33)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2.5,y=0.335),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3")+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.2,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+
geom_line(data=tibble(x=c(1,3),y=c(0.35,0.35)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2,y=0.355),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,5),y=c(0.34,0.34)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=4,y=0.345),aes(x=x,y=y,label="*"),size=5,inherit.aes = F)+
geom_line(data=tibble(x=c(2,3),y=c(0.33,0.33)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2.5,y=0.335),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3")+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.2,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+
geom_line(data=tibble(x=c(1,3),y=c(0.35,0.35)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2,y=0.355),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,5),y=c(0.34,0.34)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=4,y=0.345),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+
geom_line(data=tibble(x=c(2,3),y=c(0.33,0.33)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2.5,y=0.335),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#80B1D3")+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.2,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+
geom_line(data=tibble(x=c(1,3),y=c(0.35,0.35)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2,y=0.355),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,5),y=c(0.34,0.34)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=4,y=0.345),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+
geom_line(data=tibble(x=c(2,3),y=c(0.33,0.33)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2.5,y=0.335),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,4),y=c(0.32,0.32)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=3.5,y=0.325),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)
display.brewer.pal(n=12,name="Set3")
RColorBrewer::display.brewer.all()
library(RColorBrewer)
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
varaible_group_mean$location<-factor(varaible_group_mean$location,levels=c("Raw","Finished","Upstream","Midstream","Downstream"))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#8DD3C7")+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.2,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total ARGs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+
geom_line(data=tibble(x=c(1,3),y=c(0.35,0.35)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2,y=0.355),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,5),y=c(0.34,0.34)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=4,y=0.345),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+
geom_line(data=tibble(x=c(2,3),y=c(0.33,0.33)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2.5,y=0.335),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,4),y=c(0.32,0.32)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=3.5,y=0.325),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#8DD3C7")+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.2,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total MGEs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+
geom_line(data=tibble(x=c(1,3),y=c(0.35,0.35)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2,y=0.355),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,5),y=c(0.34,0.34)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=4,y=0.345),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+
geom_line(data=tibble(x=c(2,3),y=c(0.33,0.33)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2.5,y=0.335),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,4),y=c(0.32,0.32)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=3.5,y=0.325),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)
cor(MGE_ARG$subtype_sum,MGE_ARG$arg_sum, method = c("pearson", "kendall", "spearman"))
cor(MGE_ARG$subtype_sum,MGE_ARG$arg_sum,"spearman")
cor(MGE_ARG$subtype_sum,MGE_ARG$arg_sum,method = "spearman")
cor.test(MGE_ARG$subtype_sum,MGE_ARG$arg_sum,method = "spearman")
cor.test(MGE_ARG$subtype_sum,MGE_ARG$arg_sum,method = "pearson")
#利用ARGOAP 用手動腳本計算16s normalized豐度的腳本
#1.需要先將DB(usearch)換成想要比對的DB(usearch.udb)(stageone)
#2.運行STAGEONE
#3.makeblastdb
#4.blastx
library("openxlsx")
library("tidyverse")
library("car")
library("FSA")
library("mdthemes")
library(RColorBrewer)
#這邊是針對evalue, idendity,aa length 做一些篩選,根據你要的條件調整過
evaluematch<-1e-7
identitymatch<-80
aa_length<-25
#接下來我們將blastx過的output 讀進來
SARG_blastx_hit<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/mge blastout.xlsx",sheet=1,colNames = F)
colnames(SARG_blastx_hit)<-c("qseqid", "gene", "pident", "length", "mismatch", "gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
#根據先前設定的篩選掉不符合的blast
SARG_blastx_filter<-SARG_blastx_hit%>%
filter(evalue<=evaluematch)%>%
filter(pident>=identitymatch)%>%
filter(length>=aa_length)
#接著我們將ARGDATAbase 的AA長度讀進來，可以用perl腳本取得
SARGgenelength<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/mge blastout.xlsx",sheet=2,colNames = F)
colnames(SARGgenelength)<-c("gene","aalength")
SARG_blastx_filter<-merge(SARG_blastx_filter,SARGgenelength,all.x=T,by="gene")
#這個數字是來自metadata online.txt的16s數量
metadata16s<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/clresistance/db/clresistblast.xlsx",sheet=2,colNames = T)
SARG_blastx_filter<-separate(SARG_blastx_filter,qseqid,into=c("Name","seqnum"),sep = "_",remove = F)
SARG_blastx_filter$seqnum<-NULL
SARG_annoate_blastx<-merge(SARG_blastx_filter,metadata16s,by="Name",all.x = T)
#這個數字是來自metadata online.txt的16s數量
gene_name<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=4,colNames = F)
SARG_annoate_blastx<-merge(SARG_annoate_blastx,gene_name,by="gene",all.x=T)
#這個計算是將blast到的長度/reference AA的長度*16S數量，再加總
SARG_annoate_blastx<-SARG_annoate_blastx%>%
mutate("blastlength/referencelength"=length/(aalength*`#of16Sreads`))
subtype_16snormalize<-SARG_annoate_blastx%>%
group_by(Name)%>%
summarise(subtype_sum=sum(`blastlength/referencelength`,na.rm = T))
View(subtype_16snormalize)
#分析MGE跟ARG的相關性
arg<-read.xlsx("C:/Users/USER/Desktop/lab/實驗/Metagenomic in DWDS/DATA/ARG/argoap_out.xlsx",sheet=2,rowNames=T,colNames =T)
arg<-as.data.frame(t(arg))
arg$sum<-apply(arg,1,sum)
arg$location<-c("Raw","Raw","Raw","Finished","Finished","Finished","Upstream","Upstream","Upstream","Midstream","Midstream","Midstream","Downstream","Downstream","Downstream")
arg$location<-factor(arg$location,levels = c("Raw","Finished","Upstream","Midstream","Downstream"))
MGE_ARG<-cbind(subtype_16snormalize,arg$sum,arg$location)
colnames(MGE_ARG)[3]<-"arg_sum"
colnames(MGE_ARG)[4]<-"location"
cor.test(MGE_ARG$subtype_sum,MGE_ARG$arg_sum,method = "pearson")
#分析顯著差異
varaible_and_group<-subtype_sum~location#想測試的變數跟組別
{#檢查數據是否是常態分布的,利用shapiro.test來檢驗數據是不是常態的，如果p>0.05那麼數據就是常態的
Data.levels<-split(MGE_ARG, MGE_ARG$location)
for(i in seq(length(Data.levels))) {
group.n<-length(Data.levels[[i]]$location)
group.name <-Data.levels[[i]]$location[1]
cat(paste("Group: ", group.name, sep=''), sep="", append=TRUE)
if (group.n < 50) {
shapiro.result<- shapiro.test(Data.levels[[i]]$subtype_sum)
cat(", Shapiro-Wilk normality test W = ", shapiro.result$statistic, " p-value = ", shapiro.result$p.value, "\n" , sep="")
} else {
ks.result<-ks.test(Data.levels[[i]]$subtype_sum, pnorm, mean(Data.levels[[i]]$subtype_sum), sd(Data.levels[[i]]$subtype_sum))
cat(", Kolmogorov-Smirnov normality test D = ", ks.result$statistic, " p-value = ", ks.result$p.value, "\n" , sep="", append=TRUE)
}
}
#檢查數據變異數的同質性，，如果levenes test 的結果p>0.05，那我們可以認為以這幾個組別間的變異數沒有明顯差異，他們是同質的P
homo<-leveneTest(varaible_and_group,data = MGE_ARG)
if (homo$`Pr(>F)`[1]>0.05){
print("data is homo")
}else{print ("data is nonhomo")}
#如果不同質可以用ftest來看是誰不同質
#res.ftest <- var.test(Data.levels[[1]]$bacitracin,Data.levels[[4]]$bacitracin,data = data)
#res.ftest
}
#我們必須手動去看是否是常態及同質的，如果兩者皆符合，那我們可以使用t-test
pairwise.t.test(MGE_ARG$subtype_sum,MGE_ARG$location,p.adjust.method = "BH")
?pairwise.t.test
#如果兩者中有一不符合，那我們得使用wilcoxon rank sum test
pairwise.wilcox.test(data$bacitracin,data$location,p.adjust.method = "BH")
wilcox.test(Data.levels[[5]]$bacitracin,Data.levels[[4]]$bacitracin,p.adjust.method = "BH")
#先畫一張MGE豐度圖
varaible_group_mean<-MGE_ARG%>%
group_by(location)%>%
summarise(type_mean=mean(subtype_sum),type_sd=sd(subtype_sum))
varaible_group_mean$location<-factor(varaible_group_mean$location,levels=c("Raw","Finished","Upstream","Midstream","Downstream"))
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#8DD3C7")+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.2,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total MGEs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+
geom_line(data=tibble(x=c(1,3),y=c(0.35,0.35)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2,y=0.355),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,5),y=c(0.34,0.34)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=4,y=0.345),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+
geom_line(data=tibble(x=c(2,3),y=c(0.33,0.33)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2.5,y=0.335),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,4),y=c(0.32,0.32)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=3.5,y=0.325),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)
RColorBrewer::display.brewer.all()
display.brewer.pal(n=12,name="Set3")
brewer.pal(n=12,name="Set3")
color<-c("#8DD3C7","#FFFFB3","#BEBADA","#FB8072","#80B1D3")
ggplot(varaible_group_mean)+geom_bar(aes(x=location, y=type_mean), stat="identity",fill="#8DD3C7")+geom_errorbar(aes(x=location,ymin=type_mean-type_sd, ymax=type_mean+type_sd), width=.2,position=position_dodge(.9))+
theme_bw()+ labs(x="Location",y="Total MGEs abundance normalization aganist 16S")+theme(axis.title = element_text(size=13),axis.text =element_text(size=12.5)  ,legend.title= element_text(size=12),legend.text = element_text(size=12))+
geom_line(data=tibble(x=c(1,3),y=c(0.35,0.35)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2,y=0.355),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,5),y=c(0.34,0.34)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=4,y=0.345),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+
geom_line(data=tibble(x=c(2,3),y=c(0.33,0.33)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=2.5,y=0.335),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)+geom_line(data=tibble(x=c(3,4),y=c(0.32,0.32)),aes(x=x,y=y),inherit.aes = F,size=0.8)+geom_text(data=tibble(x=3.5,y=0.325),aes(x=x,y=y,label="***"),size=5,inherit.aes = F)
View(varaible_group_mean)
