library("Hmisc")
library("openxlsx")
library("tidyverse")
library("ggplot2")
dianomd_annotate_orf<-read.table("C://Users/USER/Desktop/SRR6986807ARC.sam.map.txt",header = T,sep = "\\t")
dianomd_annotate_orf<-read.table("C://Users/USER/Desktop/SRR6986807ARC.sam.map.txt",header = T,sep = "\t")
View(dianomd_annotate_orf)
dianomd_annotate_orf<-read.table("C://Users/USER/Desktop/SRR6986807ARC.sam.map.txt",header = F,sep = "\t")
View(dianomd_annotate_orf)
dianomd_annotate_orf<-read.table("C://Users/USER/Desktop/SRR6986807ARC.sam.map.txt",header = T,sep = "\t")
View(dianomd_annotate_orf)
dianomd_annotate_orf<-read.table("C://Users/USER/Desktop/SRR6986807ARC.sam.map.txt",header = T,sep = "\t")
View(dianomd_annotate_orf)
dianomd_annotate_orf<-read.xlsx("C:/Users/USER/Desktop/SRR6986807ARC_classfication.xlsx",rowNames=F,colNames=T,sheet=1)
View(dianomd_annotate_orf)
bowtie2_bbmap_mapped_coverage<-read.table("C://Users/USER/Desktop/SRR6986807ARC.sam.map.txt",header=T,sep="\t")
View(bowtie2_bbmap_mapped_coverage)
View(dianomd_annotate_orf)
colnames(dianomd_annotate_orf)[colnames(dianomd_annotate_orf) == 'qseqid'] <- 'ID'
coverage_dianomd_list<-merge(dianomd_annotate_orf,bowtie2_bbmap_mapped_coverage,by="ID",all = T)
View(coverage_dianomd_list)
dianomd_annotate_orf<-read.xlsx("C:/Users/USER/Desktop/SRR6986807ARC_classfication.xlsx",rowNames=F,colNames=T,sheet=1)
bowtie2_bbmap_mapped_coverage<-read.table("C://Users/USER/Desktop/SRR6986807ARC.sam.map.txt",header=T,sep="\t")
View(dianomd_annotate_orf)
colnames(bowtie2_bbmap_mapped_coverage)[colnames(bowtie2_bbmap_mapped_coverage) == 'ID'] <- 'contig'
View(bowtie2_bbmap_mapped_coverage)
View(dianomd_annotate_orf)
coverage_dianomd_list<-merge(dianomd_annotate_orf,bowtie2_bbmap_mapped_coverage,by="contig",all = T)
View(coverage_dianomd_list)
View(bowtie2_bbmap_mapped_coverage)
View(dianomd_annotate_orf)
View(coverage_dianomd_list)
View(dianomd_annotate_orf)
View(coverage_dianomd_list)
View(coverage_dianomd_list)
View(dianomd_annotate_orf)
View(coverage_dianomd_list)
coverage_dianomd_list%>%
filter(!is.na(gene))
coverage_dianomd_list<-coverage_dianomd_list%>%
filter(!is.na(gene))
coverage_dianomd_type_stastis<-coverage_dianomd_list%>%
group_by(type)%>%
summarise(type_sum=sum(Avg_fold,na.rm = T))
View(coverage_dianomd_type_stastis)
coverage_dianomd_subtype_stastis<-coverage_dianomd_reannotae%>%
group_by(type,subtype)%>%
summarise(subtype_sum=sum(Avg_fold,na.rm = T))
coverage_dianomd_subtype_stastis<-coverage_dianomd_list%>%
group_by(type,subtype)%>%
summarise(subtype_sum=sum(Avg_fold,na.rm = T))
View(coverage_dianomd_subtype_stastis)
View(coverage_dianomd_type_stastis)
View(coverage_dianomd_list)
View(coverage_dianomd_list)
View(coverage_dianomd_list)
coverage_dianomd_list%>%
mutate(coverage=(AVG_fold*150/5.6))
View(coverage_dianomd_list)
coverage_dianomd_list%>%
mutate(coverage=(Avg_fold*150/5.6))
list<-coverage_dianomd_list%>%
mutate(coverage=(Avg_fold*150/5.6))
View(list)
contig_length<-read.xlsx("C:/Users/USER/Desktop/contig_len.xlsx",rowNames = F,colNames = T,sheet=1)
View(list)
View(contig_length)
View(coverage_dianomd_list)
coverage_dianomd_list<-merge(coverage_dianomd_list,contig_length,all.x=T)
View(coverage_dianomd_list)
list<-coverage_dianomd_list%>%
mutate(coverage=(Avg_fold*150/(len*5.6)))
View(coverage_dianomd_list)
View(list)
View(list)
View(list)
View(list)
View(list)
list<-coverage_dianomd_list%>%
mutate(contig_coverage=(Avg_fold*150/(len*5.6)))%>%
select(contig,qseqid,type,subtype,contig_taxon,percent,contig_coverage)
View(list)
#利用ARGOAP 用手動腳本計算16s normalized豐度的腳本
#1.需要先將DB(usearch)換成想要比對的DB(usearch.udb)(stageone)
#2.運行STAGEONE
#3.makeblastdb
#4.blastx
library("openxlsx")
library("tidyverse")
#這邊是針對evalue, idendity,aa length 做一些篩選,根據你要的條件調整過
evaluematch<-1e-7
identitymatch<-80
aa_length<-25
#接下來我們將blastx過的output 讀進來
SARG_blastx_hit<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=1,colNames = F)
View(SARG_blastx_hit)
colnames(SARG_blastx_hit)<-c("qseqid", "gene", "pident", "length", "mismatch", "gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
#根據先前設定的篩選掉不符合的blast
SARG_blastx_filter<-SARG_blastx_hit%>%
filter(evalue<=evaluematch)%>%
filter(pident>=identitymatch)%>%
filter(length>=aa_length)
#接著我們將ARGDATAbase 的AA長度讀進來，可以用perl腳本取得
SARGgenelength<-read.xlsx(xlsxFile = "C:/Users/TUNG'S LAB/Desktop/test1.xlsx",sheet=3,colNames = T)
#接著我們將ARGDATAbase 的AA長度讀進來，可以用perl腳本取得
SARGgenelength<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=3,colNames = T)
View(SARGgenelength)
#接著我們將ARGDATAbase 的AA長度讀進來，可以用perl腳本取得
SARGgenelength<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=3,colNames = F)
colnames(SARGgenelength)<-c("qseqid","aalength")
SARG_blastx_filter<-merge(SARG_blastx_filter,SARGgenelength,all.x=T)
#這個數字是來自metadata online.txt的16s數量
metadata16s<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=2,colNames = F)
View(metadata16s)
#這個數字是來自metadata online.txt的16s數量
metadata16s<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=2,colNames = T)
View(metadata16s)
View(SARG_blastx_filter)
View(SARG_blastx_filter)
View(metadata16s)
?separate
separate(SARG_blastx_filter,qseqid,into=c("Name","seqnum"),sep = "_",remove = F)
SARG_blastx_filter<-separate(SARG_blastx_filter,qseqid,into=c("Name","seqnum"),sep = "_",remove = F)
View(SARG_blastx_filter)
SARG_blastx_filter$seqnum<-NULL
SARG_annoate_blastx<-merge(SARG_blastx_filter,metadata16s,by="Name",all.x = T)
View(SARG_annoate_blastx)
View(SARGgenelength)
colnames(SARGgenelength)<-c("qseqid","aalength")
SARG_blastx_filter<-merge(SARG_blastx_filter,SARGgenelength,all.x=T)
View(SARG_blastx_filter)
#接著我們將ARGDATAbase 的AA長度讀進來，可以用perl腳本取得
SARGgenelength<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=3,colNames = F)
colnames(SARGgenelength)<-c("qseqid","aalength")
SARG_blastx_filter<-merge(SARG_blastx_filter,SARGgenelength,all.x=T)
View(SARG_blastx_filter)
#接著我們將ARGDATAbase 的AA長度讀進來，可以用perl腳本取得
SARGgenelength<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=3,colNames = F)
colnames(SARGgenelength)<-c("qseqid","aalength")
#利用ARGOAP 用手動腳本計算16s normalized豐度的腳本
#1.需要先將DB(usearch)換成想要比對的DB(usearch.udb)(stageone)
#2.運行STAGEONE
#3.makeblastdb
#4.blastx
library("openxlsx")
library("tidyverse")
#這邊是針對evalue, idendity,aa length 做一些篩選,根據你要的條件調整過
evaluematch<-1e-7
identitymatch<-80
aa_length<-25
#接下來我們將blastx過的output 讀進來
SARG_blastx_hit<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=1,colNames = F)
colnames(SARG_blastx_hit)<-c("qseqid", "gene", "pident", "length", "mismatch", "gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
#根據先前設定的篩選掉不符合的blast
SARG_blastx_filter<-SARG_blastx_hit%>%
filter(evalue<=evaluematch)%>%
filter(pident>=identitymatch)%>%
filter(length>=aa_length)
#接著我們將ARGDATAbase 的AA長度讀進來，可以用perl腳本取得
SARGgenelength<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=3,colNames = F)
colnames(SARGgenelength)<-c("qseqid","aalength")
SARG_blastx_filter<-merge(SARG_blastx_filter,SARGgenelength,all.x=T,by="qseqis")
SARG_blastx_filter<-merge(SARG_blastx_filter,SARGgenelength,all.x=T,by="qseqid")
View(SARG_blastx_filter)
View(SARG_blastx_hit)
#接著我們將ARGDATAbase 的AA長度讀進來，可以用perl腳本取得
SARGgenelength<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=3,colNames = F)
colnames(SARGgenelength)<-c("qseqid","aalength")
SARG_blastx_filter<-merge(SARG_blastx_filter,SARGgenelength,all.x=T,by="qseqid")
View(SARG_blastx_filter)
#接著我們將ARGDATAbase 的AA長度讀進來，可以用perl腳本取得
SARGgenelength<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=3,colNames = F)
colnames(SARGgenelength)<-c("gene","aalength")
SARG_blastx_filter<-merge(SARG_blastx_filter,SARGgenelength,all.x=T,by="qseqid")
SARG_blastx_filter<-merge(SARG_blastx_filter,SARGgenelength,all.x=T,by="gene")
View(SARG_blastx_filter)
#接下來我們將blastx過的output 讀進來
SARG_blastx_hit<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=1,colNames = F)
colnames(SARG_blastx_hit)<-c("qseqid", "gene", "pident", "length", "mismatch", "gapopen", "qstart", "qend", "sstart", "send", "evalue", "bitscore")
#根據先前設定的篩選掉不符合的blast
SARG_blastx_filter<-SARG_blastx_hit%>%
filter(evalue<=evaluematch)%>%
filter(pident>=identitymatch)%>%
filter(length>=aa_length)
#接著我們將ARGDATAbase 的AA長度讀進來，可以用perl腳本取得
SARGgenelength<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=3,colNames = F)
colnames(SARGgenelength)<-c("gene","aalength")
SARG_blastx_filter<-merge(SARG_blastx_filter,SARGgenelength,all.x=T,by="gene")
View(SARG_blastx_filter)
#這個數字是來自metadata online.txt的16s數量
metadata16s<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=2,colNames = T)
SARG_blastx_filter<-separate(SARG_blastx_filter,qseqid,into=c("Name","seqnum"),sep = "_",remove = F)
SARG_blastx_filter$seqnum<-NULL
SARG_annoate_blastx<-merge(SARG_blastx_filter,metadata16s,by="Name",all.x = T)
View(metadata16s)
View(SARG_annoate_blastx)
#這個數字是來自metadata online.txt的16s數量
gene_name<-read.xlsx(xlsxFile = "C:/Users/USER/Desktop/clresistblast.xlsx",sheet=4,colNames = F)
colnames(gene_name)<-c("gene","gene_name")
SARG_annoate_blastx<-merge(SARG_annoate_blastx,gene_name,by="gene",all.x=T)
View(SARG_annoate_blastx)
View(SARG_annoate_blastx)
View(SARG_blastx_filter)
View(SARG_blastx_filter)
View(SARG_blastx_filter)
View(metadata16s)
View(SARG_annoate_blastx)
View(SARG_annoate_blastx)
#這個計算是將blast到的長度/reference AA的長度*16S數量，再加總
SARG_annoate_blastx<-SARG_annoate_blastx%>%
mutate("blastlength/referencelength"=length/(aalength*`#of16Sreads`))
View(SARG_annoate_blastx)
View(SARG_annoate_blastx)
subtype_16snormalize<-SARG_annoate_blastx%>%
group_by(Name)%>%
summarise(subtype_sum=sum(`blastlength/referencelength`,na.rm = T))
View(subtype_16snormalize)
subtype_16snormalize<-SARG_annoate_blastx%>%
group_by(Name,gene)%>%
summarise(subtype_sum=sum(`blastlength/referencelength`,na.rm = T))
subtype_16snormalize<-SARG_annoate_blastx%>%
group_by(gene)%>%
summarise(subtype_sum=sum(`blastlength/referencelength`,na.rm = T))
View(subtype_16snormalize)
subtype_16snormalize<-SARG_annoate_blastx%>%
group_by(Name,gene)%>%
summarise(subtype_sum=sum(`blastlength/referencelength`,na.rm = T))
View(SARG_annoate_blastx)
subtype_16snormalize<-SARG_annoate_blastx%>%
group_by(gene)%>%
summarise(subtype_sum=sum(`blastlength/referencelength`,na.rm = T))
View(subtype_16snormalize)
subtype_16snormalize<-SARG_annoate_blastx%>%
group_by(Name,gene)%>%
summarise(subtype_sum=sum(`blastlength/referencelength`,na.rm = T))
subtype_16snormalize<-SARG_annoate_blastx%>%
group_by(Name,gene)%>%
summarise(subtype_sum=sum(`blastlength/referencelength`,na.rm = T))
View(subtype_16snormalize)
subtype_16snormalize<-merge(subtype_16snormalize,gene_name,by="gene",all.x = T)
View(subtype_16snormalize)
write.xlsx(subtype_16snormalize,file ="ff.xlsx")
write.xlsx(subtype_16snormalize,file ="C:/Users/USER/Desktop/ff.xlsx")
subtype_16snormalize<-SARG_annoate_blastx%>%
group_by(Name)%>%
summarise(subtype_sum=sum(`blastlength/referencelength`,na.rm = T))
View(subtype_16snormalize)
subtype_16snormalize<-SARG_annoate_blastx%>%
group_by(Name)%>%
summarise(subtype_sum=sum(`blastlength/referencelength`,na.rm = T))
write.xlsx(subtype_16snormalize,file ="C:/Users/USER/Desktop/ff.xlsx")
